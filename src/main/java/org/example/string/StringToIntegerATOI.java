package org.example.string;

/*
Реализуйте функцию myAtoi(string s), которая преобразует строку в 32-битное целое число со знаком.

Алгоритм для myAtoi(string s) заключается в следующем:

Пробел: игнорируйте все начальные пробелы (" ").
Знак: определите знак, проверив, является ли следующий символ '-' или '+', и предположив,
что он положительный, если ни того, ни другого нет.
Преобразование: считайте целое число, пропуская ведущие нули, пока не встретите нецифровой символ
или не достигнете конца строки. Если не было считано ни одной цифры, то результатом будет 0.
Округление: если целое число выходит за пределы 32-битного диапазона целых чисел
со знаком [-231, 231 - 1], то округлите его так, чтобы оно оставалось в этом диапазоне.
В частности, целые числа меньше -231 должны быть округлены до -231, а целые числа больше 231 - 1
должны быть округлены до 231 - 1.
Верните целое число в качестве конечного результата.



Пример 1:

Ввод: s = "42"

Результат: 42

Explanation:

Подчёркнутые символы — это то, что считывается, а курсор — это текущая позиция считывателя.
Шаг 1: "42" (символы не считываются, потому что нет начальных пробелов)
 ^
Шаг 2: "42" (символы не считываются, потому что нет ни '-', ни '+')
 ^
Шаг 3: "42" ("42" считывается)
           ^
Example 2:

Input: s = " -042"

Output: -42

Explanation:

Шаг 1: "   -042" (пробелы в начале считываются и игнорируются)
 ^
Шаг 2: " -042" (считывается '-', поэтому результат должен быть отрицательным)
 ^
Шаг 3: " -042" ("042" считывается, ведущие нули в результате игнорируются)

Example 3:

Input: s = "1337c0d3"

Output: 1337

Explanation:

Шаг 1: "1337c0d3" (не считывается ни одного символа, так как нет начальных пробелов)

Шаг 2: "1337c0d3" (не считывается ни одного символа, так как нет ни '-', ни '+')

Шаг 3: "1337c0d3" ("1337" считывается; чтение останавливается,
потому что следующий символ не является цифрой)

Example 4:

Input: s = "0-1"

Output: 0

Объяснение:

Шаг 1: «0-1» (не считывается ни одного символа, так как нет начальных пробелов)
 ^
 Шаг 2: «0-1» (не считывается ни одного символа, так как нет ни «-», ни «+»)
 ^
Шаг 3: «0-1» («0» считывается; чтение останавливается, потому что следующий символ не является цифрой)

Пример 5:

Ввод: s = «words and 987»

Результат: 0

Объяснение:

Чтение останавливается на первом нецифровом символе «w».



Ограничения:

0 <= s.length <= 200
s состоит из английских букв (строчных и прописных), цифр (0-9), ' ', '+', '-', и '.'.
 */

public class StringToIntegerATOI {

    public static void main(String[] args) {

//        String s = "1337c0d3";
        String s = "   -042";

        System.out.println(myAtoi(s));
    }

    public static int myAtoi(String s) {

        int sign = 1;
        int res = 0;
        int idx = 0;

        while (idx < s.length() && s.charAt(idx) == ' ') {
            idx++;
        }

        if (idx < s.length() && (s.charAt(idx) == '-' || s.charAt(idx) == '+')) {
            if (s.charAt(idx++) == '-') {
                sign = -1;
            }
        }

        while (idx < s.length() && s.charAt(idx) >= '0' && s.charAt(idx) <= '9') {

            if (res > Integer.MAX_VALUE / 10
                    || (res == Integer.MAX_VALUE / 10 && s.charAt(idx) - '0' > 7)) {
                return sign == 1 ? Integer.MAX_VALUE : Integer.MIN_VALUE;
            }

            res = 10 * res + (s.charAt(idx++) - '0');
        }
        return res * sign;
    }
}
